{"version":3,"sources":["components/Blog/Post/Post.js","components/Blog/SinglePostCell/SinglePostCell.js","pages/PostPage/PostPage.js"],"names":["md","MarkdownIt","IMAGE_WIDTHS","summary","full","formattedBody","post","output","render","body","truncate","postImageUrl","filename","image","split","pop","Post","className","src","loading","to","routes","slug","title","author","dangerouslySetInnerHTML","__html","date","postedAt","formatDistanceToNow","Date","addSuffix","tags","QUERY","gql","variables","PostPage","useParams","SinglePostCell"],"mappings":";4KAMA,MAAMA,EAAK,IAAIC,IAETC,EAAe,CACnBC,QAAS,IACTC,KAAM,MAOFC,EAAgB,CAACC,EAAMH,KAC3B,IAAII,EAASP,EAAGQ,OAAOF,EAAKG,MAC5B,OAAIN,EACKO,IAASH,EAAQ,KAEnBA,GAGHI,EAAe,CAACL,EAAMH,KAC1B,MAAMS,EAAWN,EAAKO,MAAMC,MAAM,KAAKC,MAGvC,MAAQ,iDAAgDb,EAF3CC,EAAU,UAAY,+BAE+DS,KA0DrFI,IAvDF,EAAGV,OAAMH,WAAU,MAC9B,OACE,6BAASc,UAAU,eACfd,GACA,yBACEe,IAAKP,EAAaL,EAAMH,GACxBc,UAAU,wBACVE,QAAQ,SAGZ,4BAAQF,UAAU,qCAChB,wBAAIA,UAAU,0BACZ,kBAAC,OAAD,CACEG,GAAIC,SAAOf,KAAK,CAAEgB,KAAMhB,EAAKgB,OAC7BL,UAAU,+CAETX,EAAKiB,QAGV,wBAAIN,UAAU,yBAAd,MAA0CX,EAAKkB,SAEjD,yBAAKP,UAAU,QACZd,GACC,yBACEe,IAAKP,EAAaL,EAAMH,GACxBc,UAAU,8BAGd,yBACEA,UAAU,WACVQ,wBAAyB,CAAEC,OAAQrB,EAAcC,EAAMH,MAExDA,GACC,uBAAGc,UAAU,wBACX,kBAAC,OAAD,CACEG,GAAIC,SAAOf,KAAK,CAAEgB,KAAMhB,EAAKgB,OAC7BL,UAAU,iKAFZ,wBASN,4BAAQA,UAAU,gDAChB,0CA/DeU,EA+DcrB,EAAKsB,SA9DjCC,YAAoB,IAAIC,KAAKH,GAAO,CAAEI,WAAW,MA+DjDzB,EAAK0B,MACJ,wBAAIf,UAAU,qBACZ,kBAAC,IAAD,CAASe,KAAM1B,EAAK0B,UAlETL,Q,4FCXhB,MAIMM,EAAQC,GAAI;;;;;;;;;;;;;;;;0CAJE,EAAGZ,WAAH,CACzBa,UAAW,CAAEb,U,gBAqBQ,IAAM,2C,QAEN,EAAGhB,UAEtB,oCACE,kBAACU,EAAA,EAAD,CAAMV,KAAMA,OCrBH8B,UALE,KACf,MAAM,KAAEd,GAASe,sBACjB,OAAO,kBAACC,EAAD,CAAgBhB,KAAMA","file":"static/js/11.aec91c16.chunk.js","sourcesContent":["import { formatDistanceToNow } from 'date-fns'\nimport MarkdownIt from 'markdown-it'\nimport truncate from 'html-truncate'\nimport TagList from 'src/components/Blog/TagList'\nimport { Link, routes } from '@redwoodjs/router'\n\nconst md = new MarkdownIt()\n\nconst IMAGE_WIDTHS = {\n  summary: 576,\n  full: 1632,\n}\n\nconst formattedDate = (date) => {\n  return formatDistanceToNow(new Date(date), { addSuffix: true })\n}\n\nconst formattedBody = (post, summary) => {\n  let output = md.render(post.body)\n  if (summary) {\n    return truncate(output, 500)\n  }\n  return output\n}\n\nconst postImageUrl = (post, summary) => {\n  const filename = post.image.split('/').pop()\n  const type = summary ? 'summary' : 'full'\n\n  return `https://cdn.filestackcontent.com/resize=width:${IMAGE_WIDTHS[type]}/auto_image/compress/${filename}`\n}\n\nconst Post = ({ post, summary = false }) => {\n  return (\n    <article className=\"mt-4 mb-12\">\n      {!summary && (\n        <img\n          src={postImageUrl(post, summary)}\n          className=\"mt-1 mb-2 mr-4 w-full\"\n          loading=\"lazy\"\n        />\n      )}\n      <header className=\"flex items-center justify-between\">\n        <h1 className=\"text-2xl font-semibold\">\n          <Link\n            to={routes.post({ slug: post.slug })}\n            className=\"text-indigo-600 hover:bg-indigo-100 rounded\"\n          >\n            {post.title}\n          </Link>\n        </h1>\n        <h2 className=\"text-sm text-gray-600\">by {post.author}</h2>\n      </header>\n      <div className=\"mt-2\">\n        {summary && (\n          <img\n            src={postImageUrl(post, summary)}\n            className=\"float-left mt-1 mr-4 w-48\"\n          />\n        )}\n        <div\n          className=\"markdown\"\n          dangerouslySetInnerHTML={{ __html: formattedBody(post, summary) }}\n        ></div>\n        {summary && (\n          <p className=\"clearfix text-center\">\n            <Link\n              to={routes.post({ slug: post.slug })}\n              className=\"inline-block text-right text-indigo-600 hover:text-indigo-800 text-sm bg-indigo-100 hover:bg-transparent px-2 rounded font-medium hover:bg-indigo-100 rounded\"\n            >\n              Continue reading &raquo;\n            </Link>\n          </p>\n        )}\n      </div>\n      <footer className=\"flex items-center mt-4 text-xs text-gray-600\">\n        <time>Posted: {formattedDate(post.postedAt)}</time>\n        {post.tags && (\n          <ul className=\"flex-1 text-right\">\n            <TagList tags={post.tags} />\n          </ul>\n        )}\n      </footer>\n    </article>\n  )\n}\n\nexport default Post\n","import Post from 'src/components/Blog/Post'\n\nexport const beforeQuery = ({ slug }) => ({\n  variables: { slug },\n})\n\nexport const QUERY = gql`\n  query POSTS_FIND_BY_SLUG($slug: String) {\n    post: findPostBySlug(slug: $slug) {\n      id\n      title\n      slug\n      author\n      body\n      image\n      postedAt\n      tags {\n        id\n        name\n      }\n    }\n  }\n`\n\nexport const Loading = () => <div>Loading...</div>\n\nexport const Success = ({ post }) => {\n  return (\n    <>\n      <Post post={post} />\n    </>\n  )\n}\n","import { useParams } from '@redwoodjs/router'\nimport SinglePostCell from 'src/components/Blog/SinglePostCell'\n\nconst PostPage = () => {\n  const { slug } = useParams()\n  return <SinglePostCell slug={slug} />\n}\n\nexport default PostPage\n"],"sourceRoot":""}