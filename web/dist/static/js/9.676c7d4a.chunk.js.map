{"version":3,"sources":["components/Admin/PostsList/PostsList.js","components/Admin/PostsCell/PostsCell.js","pages/Admin/PostsPage/PostsPage.js"],"names":["HIDE_POST_MUTATION","gql","DELETE_POST_MUTATION","PostsList","posts","hidePost","useMutation","onCompleted","location","reload","refetchQueries","query","QUERY","awaitRefetchQueries","deletePost","onHideClick","event","id","target","dataset","title","confirm","variables","parseInt","onDeleteClick","className","map","post","key","to","routes","adminEdit","author","body","split","length","wordCount","postedAt","dateTime","formatDistanceToNow","Date","addSuffix","format","href","data-id","data-title","onClick","allPosts","PostsPage"],"mappings":";yLAMA,MAAMA,EAAqBC,GAAI;;;;;;EAQzBC,EAAuBD,GAAI;;;;;;EA2HlBE,MA/GG,EAAGC,YACnB,MAAOC,GAAYC,sBAAYN,EAAoB,CACjDO,YAAa,KACXC,SAASC,UAKXC,eAAgB,CAAC,CAAEC,MAAOC,IAC1BC,qBAAqB,KAGhBC,GAAcR,sBAAYJ,EAAsB,CACrDK,YAAa,KACXC,SAASC,UAKXC,eAAgB,CAAC,CAAEC,MAAOC,IAC1BC,qBAAqB,IAGjBE,EAAeC,IACnB,MAAMC,EAAKD,EAAME,OAAOC,QAAQF,GAC1BG,EAAQJ,EAAME,OAAOC,QAAQC,MAE/BC,QAAS,6CAA4CD,QACvDf,EAAS,CAAEiB,UAAW,CAAEL,GAAIM,SAASN,OAInCO,EAAiBR,IACrB,MAAMC,EAAKD,EAAME,OAAOC,QAAQF,GAC1BG,EAAQJ,EAAME,OAAOC,QAAQC,MAE/BC,QAAS,yCAAwCD,QACnDN,EAAW,CAAEQ,UAAW,CAAEL,GAAIM,SAASN,OAI3C,OACE,2BAAOQ,UAAU,UACf,+BACGrB,EAAMsB,KAAKC,GACV,wBAAIC,IAAKD,EAAKV,IACZ,wBAAIQ,UAAU,QACZ,kBAAC,OAAD,CACEI,GAAIC,SAAOC,UAAU,CAAEd,GAAIU,EAAKV,KAChCQ,UAAU,iCAETE,EAAKP,OAER,uBAAGK,UAAU,yBAAb,MAAyCE,EAAKK,SAEhD,wBAAIP,UAAU,4BA3DPE,IACVA,EAAKM,KAAKC,MAAM,KAAKC,OA2DfC,CAAUT,GADb,UAGA,wBAAIF,UAAU,2BACXE,EAAKU,SACJ,oCACE,0BAAMZ,UAAU,SAAhB,YACY,IACV,0BAAMa,SAAUX,EAAKU,UAClBE,YAAoB,IAAIC,KAAKb,EAAKU,UAAW,CAC5CI,WAAW,MAIjB,0BACEhB,UAAU,sBACVa,SAAUX,EAAKU,UAEdK,YAAO,IAAIF,KAAKb,EAAKU,UAAW,WAIrC,0BAAMZ,UAAU,6FAAhB,UAKJ,wBAAIA,UAAU,2BACXE,EAAKU,UACJ,uBACEM,KAAK,IACLC,UAASjB,EAAKV,GACd4B,aAAYlB,EAAKP,MACjBK,UAAU,uCACVqB,QAAS/B,GALX,QAUF,uBACE4B,KAAK,IACLC,UAASjB,EAAKV,GACd4B,aAAYlB,EAAKP,MACjBK,UAAU,+BACVqB,QAAStB,GALX,iBCtHP,MAAMZ,EAAQX,GAAI;;;;;;;;;;;;;;;;;;4CAoBF,IAAM,2C,QAEN,EAAG8C,cACjB,kBAAC,EAAD,CAAW3C,MAAO2C,EAAS3C,W,qECnBrB4C,UAJG,IACT,kBAAC,IAAD","file":"static/js/9.676c7d4a.chunk.js","sourcesContent":["import { useMutation } from '@redwoodjs/web'\nimport { Link, routes } from '@redwoodjs/router'\nimport { format, formatDistanceToNow } from 'date-fns'\n\nimport { QUERY } from 'src/components/Admin/PostsCell'\n\nconst HIDE_POST_MUTATION = gql`\n  mutation HidePostMutation($id: ID!) {\n    hidePost(id: $id) {\n      id\n    }\n  }\n`\n\nconst DELETE_POST_MUTATION = gql`\n  mutation DeletePostMutation($id: ID!) {\n    deletePost(id: $id) {\n      id\n    }\n  }\n`\n\nconst wordCount = (post) => {\n  return post.body.split(' ').length\n}\n\nconst PostsList = ({ posts }) => {\n  const [hidePost] = useMutation(HIDE_POST_MUTATION, {\n    onCompleted: () => {\n      location.reload()\n    },\n    // This refetches the query on the list page. Read more about other ways to\n    // update the cache over here:\n    // https://www.apollographql.com/docs/react/data/mutations/#making-all-other-cache-updates\n    refetchQueries: [{ query: QUERY }],\n    awaitRefetchQueries: true,\n  })\n\n  const [deletePost] = useMutation(DELETE_POST_MUTATION, {\n    onCompleted: () => {\n      location.reload()\n    },\n    // This refetches the query on the list page. Read more about other ways to\n    // update the cache over here:\n    // https://www.apollographql.com/docs/react/data/mutations/#making-all-other-cache-updates\n    refetchQueries: [{ query: QUERY }],\n    awaitRefetchQueries: true,\n  })\n\n  const onHideClick = (event) => {\n    const id = event.target.dataset.id\n    const title = event.target.dataset.title\n\n    if (confirm(`Are you sure you want to un-publish post \"${title}\"?`)) {\n      hidePost({ variables: { id: parseInt(id) } })\n    }\n  }\n\n  const onDeleteClick = (event) => {\n    const id = event.target.dataset.id\n    const title = event.target.dataset.title\n\n    if (confirm(`Are you sure you want to delete post \"${title}\"?`)) {\n      deletePost({ variables: { id: parseInt(id) } })\n    }\n  }\n\n  return (\n    <table className=\"w-full\">\n      <tbody>\n        {posts.map((post) => (\n          <tr key={post.id}>\n            <td className=\"py-2\">\n              <Link\n                to={routes.adminEdit({ id: post.id })}\n                className=\"font-semibold text-indigo-700\"\n              >\n                {post.title}\n              </Link>\n              <p className=\"text-sm text-gray-600\">by {post.author}</p>\n            </td>\n            <td className=\"py-2 text-sm text-center\">\n              {wordCount(post)} words\n            </td>\n            <td className=\"py-2 text-sm text-right\">\n              {post.postedAt ? (\n                <>\n                  <span className=\"block\">\n                    Published{' '}\n                    <time dateTime={post.postedAt}>\n                      {formatDistanceToNow(new Date(post.postedAt), {\n                        addSuffix: true,\n                      })}\n                    </time>\n                  </span>\n                  <time\n                    className=\"block text-gray-500\"\n                    dateTime={post.postedAt}\n                  >\n                    {format(new Date(post.postedAt), 'PPPPp')}\n                  </time>\n                </>\n              ) : (\n                <span className=\"text-xs bg-gray-300 text-gray-600 font-semibold tracking-wide uppercase px-2 py-1 rounded\">\n                  Draft\n                </span>\n              )}\n            </td>\n            <td className=\"py-2 text-right text-xs\">\n              {post.postedAt && (\n                <a\n                  href=\"#\"\n                  data-id={post.id}\n                  data-title={post.title}\n                  className=\"mr-3 text-indigo-600 hover:underline\"\n                  onClick={onHideClick}\n                >\n                  Hide\n                </a>\n              )}\n              <a\n                href=\"#\"\n                data-id={post.id}\n                data-title={post.title}\n                className=\"text-red-600 hover:underline\"\n                onClick={onDeleteClick}\n              >\n                Delete\n              </a>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default PostsList\n","import PostsList from 'src/components/Admin/PostsList'\n\nexport const QUERY = gql`\n  query ALL_POSTS {\n    allPosts {\n      posts {\n        id\n        title\n        slug\n        author\n        body\n        image\n        postedAt\n        tags {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const Loading = () => <div>Loading...</div>\n\nexport const Success = ({ allPosts }) => {\n  return <PostsList posts={allPosts.posts} />\n}\n","import PostsCell from 'src/components/Admin/PostsCell'\n\nconst PostsPage = () => {\n  return <PostsCell />\n}\n\nexport default PostsPage\n"],"sourceRoot":""}